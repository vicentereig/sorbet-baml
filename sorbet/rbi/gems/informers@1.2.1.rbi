# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for types exported from the `informers` gem.
# Please instead update this file by running `bin/tapioca gem informers`.


# source://informers//lib/informers/backends/onnx.rb#1
module Informers
  class << self
    # Returns the value of attribute allow_remote_models.
    #
    # source://informers//lib/informers/env.rb#6
    def allow_remote_models; end

    # Sets the attribute allow_remote_models
    #
    # @param value the value to set the attribute allow_remote_models to.
    #
    # source://informers//lib/informers/env.rb#6
    def allow_remote_models=(_arg0); end

    # Returns the value of attribute cache_dir.
    #
    # source://informers//lib/informers/env.rb#6
    def cache_dir; end

    # Sets the attribute cache_dir
    #
    # @param value the value to set the attribute cache_dir to.
    #
    # source://informers//lib/informers/env.rb#6
    def cache_dir=(_arg0); end

    # source://informers//lib/informers/pipelines.rb#1355
    def pipeline(task, model = T.unsafe(nil), quantized: T.unsafe(nil), progress_callback: T.unsafe(nil), config: T.unsafe(nil), cache_dir: T.unsafe(nil), local_files_only: T.unsafe(nil), revision: T.unsafe(nil), device: T.unsafe(nil), dtype: T.unsafe(nil), model_file_name: T.unsafe(nil), session_options: T.unsafe(nil)); end

    # Returns the value of attribute remote_host.
    #
    # source://informers//lib/informers/env.rb#6
    def remote_host; end

    # Sets the attribute remote_host
    #
    # @param value the value to set the attribute remote_host to.
    #
    # source://informers//lib/informers/env.rb#6
    def remote_host=(_arg0); end

    # Returns the value of attribute remote_path_template.
    #
    # source://informers//lib/informers/env.rb#6
    def remote_path_template; end

    # Sets the attribute remote_path_template
    #
    # @param value the value to set the attribute remote_path_template to.
    #
    # source://informers//lib/informers/env.rb#6
    def remote_path_template=(_arg0); end

    private

    # source://informers//lib/informers/pipelines.rb#1429
    def load_items(mapping, model, pretrained_options); end
  end
end

# source://informers//lib/informers/pipelines.rb#895
class Informers::AudioClassificationPipeline < ::Informers::Pipeline
  # source://informers//lib/informers/pipelines.rb#896
  def call(audio, top_k: T.unsafe(nil)); end
end

# source://informers//lib/informers/configs.rb#45
class Informers::AutoConfig
  class << self
    # source://informers//lib/informers/configs.rb#46
    def from_pretrained(*_arg0, **_arg1, &_arg2); end
  end
end

# source://informers//lib/informers/models.rb#1392
class Informers::AutoModel < ::Informers::PretrainedMixin; end

# source://informers//lib/informers/models.rb#1394
Informers::AutoModel::BASE_IF_FAIL = T.let(T.unsafe(nil), TrueClass)

# source://informers//lib/informers/models.rb#1393
Informers::AutoModel::MODEL_CLASS_MAPPINGS = T.let(T.unsafe(nil), Array)

# source://informers//lib/informers/models.rb#1465
class Informers::AutoModelForAudioClassification < ::Informers::PretrainedMixin; end

# source://informers//lib/informers/models.rb#1466
Informers::AutoModelForAudioClassification::MODEL_CLASS_MAPPINGS = T.let(T.unsafe(nil), Array)

# source://informers//lib/informers/models.rb#1473
class Informers::AutoModelForAudioFrameClassification < ::Informers::PretrainedMixin; end

# source://informers//lib/informers/models.rb#1474
Informers::AutoModelForAudioFrameClassification::MODEL_CLASS_MAPPINGS = T.let(T.unsafe(nil), Array)

# source://informers//lib/informers/models.rb#1461
class Informers::AutoModelForCTC < ::Informers::PretrainedMixin; end

# source://informers//lib/informers/models.rb#1462
Informers::AutoModelForCTC::MODEL_CLASS_MAPPINGS = T.let(T.unsafe(nil), Array)

# source://informers//lib/informers/models.rb#1421
class Informers::AutoModelForCausalLM < ::Informers::PretrainedMixin; end

# source://informers//lib/informers/models.rb#1422
Informers::AutoModelForCausalLM::MODEL_CLASS_MAPPINGS = T.let(T.unsafe(nil), Array)

# source://informers//lib/informers/models.rb#1489
class Informers::AutoModelForDepthEstimation < ::Informers::PretrainedMixin; end

# source://informers//lib/informers/models.rb#1490
Informers::AutoModelForDepthEstimation::MODEL_CLASS_MAPPINGS = T.let(T.unsafe(nil), Array)

# source://informers//lib/informers/models.rb#1477
class Informers::AutoModelForDocumentQuestionAnswering < ::Informers::PretrainedMixin; end

# source://informers//lib/informers/models.rb#1478
Informers::AutoModelForDocumentQuestionAnswering::MODEL_CLASS_MAPPINGS = T.let(T.unsafe(nil), Array)

# source://informers//lib/informers/models.rb#1437
class Informers::AutoModelForImageClassification < ::Informers::PretrainedMixin; end

# source://informers//lib/informers/models.rb#1438
Informers::AutoModelForImageClassification::MODEL_CLASS_MAPPINGS = T.let(T.unsafe(nil), Array)

# source://informers//lib/informers/models.rb#1493
class Informers::AutoModelForImageFeatureExtraction < ::Informers::PretrainedMixin; end

# source://informers//lib/informers/models.rb#1494
Informers::AutoModelForImageFeatureExtraction::MODEL_CLASS_MAPPINGS = T.let(T.unsafe(nil), Array)

# source://informers//lib/informers/models.rb#1481
class Informers::AutoModelForImageMatting < ::Informers::PretrainedMixin; end

# source://informers//lib/informers/models.rb#1482
Informers::AutoModelForImageMatting::MODEL_CLASS_MAPPINGS = T.let(T.unsafe(nil), Array)

# source://informers//lib/informers/models.rb#1441
class Informers::AutoModelForImageSegmentation < ::Informers::PretrainedMixin; end

# source://informers//lib/informers/models.rb#1442
Informers::AutoModelForImageSegmentation::MODEL_CLASS_MAPPINGS = T.let(T.unsafe(nil), Array)

# source://informers//lib/informers/models.rb#1485
class Informers::AutoModelForImageToImage < ::Informers::PretrainedMixin; end

# source://informers//lib/informers/models.rb#1486
Informers::AutoModelForImageToImage::MODEL_CLASS_MAPPINGS = T.let(T.unsafe(nil), Array)

# source://informers//lib/informers/models.rb#1457
class Informers::AutoModelForMaskGeneration < ::Informers::PretrainedMixin; end

# source://informers//lib/informers/models.rb#1458
Informers::AutoModelForMaskGeneration::MODEL_CLASS_MAPPINGS = T.let(T.unsafe(nil), Array)

# source://informers//lib/informers/models.rb#1425
class Informers::AutoModelForMaskedLM < ::Informers::PretrainedMixin; end

# source://informers//lib/informers/models.rb#1426
Informers::AutoModelForMaskedLM::MODEL_CLASS_MAPPINGS = T.let(T.unsafe(nil), Array)

# source://informers//lib/informers/models.rb#1449
class Informers::AutoModelForObjectDetection < ::Informers::PretrainedMixin; end

# source://informers//lib/informers/models.rb#1450
Informers::AutoModelForObjectDetection::MODEL_CLASS_MAPPINGS = T.let(T.unsafe(nil), Array)

# source://informers//lib/informers/models.rb#1429
class Informers::AutoModelForQuestionAnswering < ::Informers::PretrainedMixin; end

# source://informers//lib/informers/models.rb#1430
Informers::AutoModelForQuestionAnswering::MODEL_CLASS_MAPPINGS = T.let(T.unsafe(nil), Array)

# source://informers//lib/informers/models.rb#1445
class Informers::AutoModelForSemanticSegmentation < ::Informers::PretrainedMixin; end

# source://informers//lib/informers/models.rb#1446
Informers::AutoModelForSemanticSegmentation::MODEL_CLASS_MAPPINGS = T.let(T.unsafe(nil), Array)

# source://informers//lib/informers/models.rb#1405
class Informers::AutoModelForSeq2SeqLM < ::Informers::PretrainedMixin; end

# source://informers//lib/informers/models.rb#1406
Informers::AutoModelForSeq2SeqLM::MODEL_CLASS_MAPPINGS = T.let(T.unsafe(nil), Array)

# source://informers//lib/informers/models.rb#1397
class Informers::AutoModelForSequenceClassification < ::Informers::PretrainedMixin; end

# source://informers//lib/informers/models.rb#1398
Informers::AutoModelForSequenceClassification::MODEL_CLASS_MAPPINGS = T.let(T.unsafe(nil), Array)

# source://informers//lib/informers/models.rb#1409
class Informers::AutoModelForSpeechSeq2Seq < ::Informers::PretrainedMixin; end

# source://informers//lib/informers/models.rb#1410
Informers::AutoModelForSpeechSeq2Seq::MODEL_CLASS_MAPPINGS = T.let(T.unsafe(nil), Array)

# source://informers//lib/informers/models.rb#1413
class Informers::AutoModelForTextToSpectrogram < ::Informers::PretrainedMixin; end

# source://informers//lib/informers/models.rb#1414
Informers::AutoModelForTextToSpectrogram::MODEL_CLASS_MAPPINGS = T.let(T.unsafe(nil), Array)

# source://informers//lib/informers/models.rb#1417
class Informers::AutoModelForTextToWaveform < ::Informers::PretrainedMixin; end

# source://informers//lib/informers/models.rb#1418
Informers::AutoModelForTextToWaveform::MODEL_CLASS_MAPPINGS = T.let(T.unsafe(nil), Array)

# source://informers//lib/informers/models.rb#1401
class Informers::AutoModelForTokenClassification < ::Informers::PretrainedMixin; end

# source://informers//lib/informers/models.rb#1402
Informers::AutoModelForTokenClassification::MODEL_CLASS_MAPPINGS = T.let(T.unsafe(nil), Array)

# source://informers//lib/informers/models.rb#1433
class Informers::AutoModelForVision2Seq < ::Informers::PretrainedMixin; end

# source://informers//lib/informers/models.rb#1434
Informers::AutoModelForVision2Seq::MODEL_CLASS_MAPPINGS = T.let(T.unsafe(nil), Array)

# source://informers//lib/informers/models.rb#1469
class Informers::AutoModelForXVector < ::Informers::PretrainedMixin; end

# source://informers//lib/informers/models.rb#1470
Informers::AutoModelForXVector::MODEL_CLASS_MAPPINGS = T.let(T.unsafe(nil), Array)

# source://informers//lib/informers/models.rb#1453
class Informers::AutoModelForZeroShotObjectDetection < ::Informers::PretrainedMixin; end

# source://informers//lib/informers/models.rb#1454
Informers::AutoModelForZeroShotObjectDetection::MODEL_CLASS_MAPPINGS = T.let(T.unsafe(nil), Array)

# source://informers//lib/informers/processors.rb#800
class Informers::AutoProcessor
  class << self
    # source://informers//lib/informers/processors.rb#816
    def from_pretrained(pretrained_model_name_or_path, progress_callback: T.unsafe(nil), config: T.unsafe(nil), cache_dir: T.unsafe(nil), local_files_only: T.unsafe(nil), revision: T.unsafe(nil), **kwargs); end
  end
end

# source://informers//lib/informers/processors.rb#801
Informers::AutoProcessor::FEATURE_EXTRACTOR_CLASS_MAPPING = T.let(T.unsafe(nil), Hash)

# source://informers//lib/informers/processors.rb#814
Informers::AutoProcessor::PROCESSOR_CLASS_MAPPING = T.let(T.unsafe(nil), Hash)

# source://informers//lib/informers/tokenizers.rb#250
class Informers::AutoTokenizer
  class << self
    # source://informers//lib/informers/tokenizers.rb#268
    def from_pretrained(pretrained_model_name_or_path, quantized: T.unsafe(nil), progress_callback: T.unsafe(nil), config: T.unsafe(nil), cache_dir: T.unsafe(nil), local_files_only: T.unsafe(nil), revision: T.unsafe(nil), legacy: T.unsafe(nil), **kwargs); end

    # source://informers//lib/informers/tokenizers.rb#301
    def load_tokenizer(pretrained_model_name_or_path, **options); end
  end
end

# source://informers//lib/informers/tokenizers.rb#251
Informers::AutoTokenizer::TOKENIZER_CLASS_MAPPING = T.let(T.unsafe(nil), Hash)

# source://informers//lib/informers/pipelines.rb#973
class Informers::AutomaticSpeechRecognitionPipeline < ::Informers::Pipeline
  # source://informers//lib/informers/pipelines.rb#974
  def call(audio, **kwargs); end

  private

  # @raise [Todo]
  #
  # source://informers//lib/informers/pipelines.rb#985
  def call_whisper(audio, **kwargs); end
end

# source://informers//lib/informers/backends/onnx.rb#2
module Informers::Backends; end

# source://informers//lib/informers/backends/onnx.rb#3
module Informers::Backends::Onnx
  class << self
    # source://informers//lib/informers/backends/onnx.rb#4
    def device_to_execution_providers(device); end
  end
end

# source://informers//lib/informers/models.rb#913
class Informers::BartForConditionalGeneration < ::Informers::BartPretrainedModel
  # @return [BartForConditionalGeneration] a new instance of BartForConditionalGeneration
  #
  # source://informers//lib/informers/models.rb#914
  def initialize(config, session, decoder_merged_session, generation_config); end
end

# source://informers//lib/informers/models.rb#929
class Informers::BartForSequenceClassification < ::Informers::BartPretrainedModel
  # source://informers//lib/informers/models.rb#930
  def call(model_inputs); end
end

# source://informers//lib/informers/models.rb#910
class Informers::BartModel < ::Informers::BartPretrainedModel; end

# source://informers//lib/informers/models.rb#907
class Informers::BartPretrainedModel < ::Informers::PreTrainedModel; end

# source://informers//lib/informers/tokenizers.rb#166
class Informers::BartTokenizer < ::Informers::PreTrainedTokenizer; end

# source://informers//lib/informers/models.rb#794
class Informers::BertForMaskedLM < ::Informers::BertPreTrainedModel
  # source://informers//lib/informers/models.rb#795
  def call(model_inputs); end
end

# source://informers//lib/informers/models.rb#800
class Informers::BertForSequenceClassification < ::Informers::BertPreTrainedModel
  # source://informers//lib/informers/models.rb#801
  def call(model_inputs); end
end

# source://informers//lib/informers/models.rb#806
class Informers::BertForTokenClassification < ::Informers::BertPreTrainedModel
  # source://informers//lib/informers/models.rb#807
  def call(model_inputs); end
end

# source://informers//lib/informers/models.rb#791
class Informers::BertModel < ::Informers::BertPreTrainedModel; end

# source://informers//lib/informers/models.rb#788
class Informers::BertPreTrainedModel < ::Informers::PreTrainedModel; end

# source://informers//lib/informers/tokenizers.rb#146
class Informers::BertTokenizer < ::Informers::PreTrainedTokenizer; end

# source://informers//lib/informers/env.rb#2
Informers::CACHE_HOME = T.let(T.unsafe(nil), String)

# source://informers//lib/informers/processors.rb#354
class Informers::CLIPFeatureExtractor < ::Informers::ImageFeatureExtractor; end

# source://informers//lib/informers/models.rb#1044
class Informers::CLIPModel < ::Informers::CLIPPreTrainedModel; end

# source://informers//lib/informers/models.rb#1041
class Informers::CLIPPreTrainedModel < ::Informers::PreTrainedModel; end

# source://informers//lib/informers/tokenizers.rb#178
class Informers::CLIPTokenizer < ::Informers::PreTrainedTokenizer; end

# source://informers//lib/informers/processors.rb#776
class Informers::ClapFeatureExtractor < ::Informers::FeatureExtractor
  # @return [ClapFeatureExtractor] a new instance of ClapFeatureExtractor
  #
  # source://informers//lib/informers/processors.rb#777
  def initialize(config); end

  # @raise [Todo]
  #
  # source://informers//lib/informers/processors.rb#783
  def call(audio, max_length: T.unsafe(nil)); end
end

# source://informers//lib/informers/models.rb#1220
class Informers::ClapModel < ::Informers::ClapPreTrainedModel; end

# source://informers//lib/informers/models.rb#1217
class Informers::ClapPreTrainedModel < ::Informers::PreTrainedModel; end

# source://informers//lib/informers/models.rb#845
class Informers::ConvBertModel < ::Informers::ConvBertPreTrainedModel; end

# source://informers//lib/informers/models.rb#842
class Informers::ConvBertPreTrainedModel < ::Informers::PreTrainedModel; end

# source://informers//lib/informers/env.rb#3
Informers::DEFAULT_CACHE_DIR = T.let(T.unsafe(nil), String)

# source://informers//lib/informers/pipelines.rb#1335
Informers::DEFAULT_PROGRESS_CALLBACK = T.let(T.unsafe(nil), Proc)

# source://informers//lib/informers/processors.rb#357
class Informers::DPTFeatureExtractor < ::Informers::ImageFeatureExtractor; end

# source://informers//lib/informers/models.rb#1111
class Informers::DPTForDepthEstimation < ::Informers::DPTPreTrainedModel; end

# source://informers//lib/informers/models.rb#1108
class Informers::DPTModel < ::Informers::DPTPreTrainedModel; end

# source://informers//lib/informers/models.rb#1105
class Informers::DPTPreTrainedModel < ::Informers::PreTrainedModel; end

# source://informers//lib/informers/models.rb#858
class Informers::DebertaV2Model < ::Informers::DebertaV2PreTrainedModel; end

# source://informers//lib/informers/models.rb#855
class Informers::DebertaV2PreTrainedModel < ::Informers::PreTrainedModel; end

# source://informers//lib/informers/tokenizers.rb#151
class Informers::DebertaV2Tokenizer < ::Informers::PreTrainedTokenizer; end

# source://informers//lib/informers/pipelines.rb#1014
class Informers::DepthEstimationPipeline < ::Informers::Pipeline
  # source://informers//lib/informers/pipelines.rb#1015
  def call(images); end
end

# source://informers//lib/informers/processors.rb#422
class Informers::DetrFeatureExtractor < ::Informers::ImageFeatureExtractor
  # source://informers//lib/informers/processors.rb#423
  def call(images); end

  # source://informers//lib/informers/processors.rb#473
  def check_segment_validity(mask_labels, mask_probs, k, mask_threshold = T.unsafe(nil), overlap_mask_area_threshold = T.unsafe(nil)); end

  # source://informers//lib/informers/processors.rb#510
  def compute_segments(mask_probs, pred_scores, pred_labels, mask_threshold, overlap_mask_area_threshold, label_ids_to_fuse = T.unsafe(nil), target_size = T.unsafe(nil)); end

  # source://informers//lib/informers/processors.rb#442
  def post_process_object_detection(*args); end

  # source://informers//lib/informers/processors.rb#598
  def post_process_panoptic_segmentation(outputs, threshold: T.unsafe(nil), mask_threshold: T.unsafe(nil), overlap_mask_area_threshold: T.unsafe(nil), label_ids_to_fuse: T.unsafe(nil), target_sizes: T.unsafe(nil)); end

  # source://informers//lib/informers/processors.rb#446
  def remove_low_and_no_objects(class_logits, mask_logits, object_mask_threshold, num_labels); end
end

# source://informers//lib/informers/models.rb#1084
class Informers::DetrForObjectDetection < ::Informers::DetrPreTrainedModel
  # source://informers//lib/informers/models.rb#1085
  def call(model_inputs); end
end

# source://informers//lib/informers/models.rb#1090
class Informers::DetrForSegmentation < ::Informers::DetrPreTrainedModel
  # source://informers//lib/informers/models.rb#1091
  def call(model_inputs); end
end

# source://informers//lib/informers/models.rb#1081
class Informers::DetrModel < ::Informers::DetrPreTrainedModel; end

# source://informers//lib/informers/models.rb#1551
class Informers::DetrObjectDetectionOutput < ::Informers::ModelOutput
  # @return [DetrObjectDetectionOutput] a new instance of DetrObjectDetectionOutput
  #
  # source://informers//lib/informers/models.rb#1554
  def initialize(logits, pred_boxes); end

  # Returns the value of attribute logits.
  #
  # source://informers//lib/informers/models.rb#1552
  def logits; end

  # Returns the value of attribute pred_boxes.
  #
  # source://informers//lib/informers/models.rb#1552
  def pred_boxes; end
end

# source://informers//lib/informers/models.rb#1078
class Informers::DetrPreTrainedModel < ::Informers::PreTrainedModel; end

# source://informers//lib/informers/models.rb#1561
class Informers::DetrSegmentationOutput < ::Informers::ModelOutput
  # @return [DetrSegmentationOutput] a new instance of DetrSegmentationOutput
  #
  # source://informers//lib/informers/models.rb#1564
  def initialize(logits, pred_boxes, pred_masks); end

  # Returns the value of attribute logits.
  #
  # source://informers//lib/informers/models.rb#1562
  def logits; end

  # Returns the value of attribute pred_boxes.
  #
  # source://informers//lib/informers/models.rb#1562
  def pred_boxes; end

  # Returns the value of attribute pred_masks.
  #
  # source://informers//lib/informers/models.rb#1562
  def pred_masks; end
end

# source://informers//lib/informers/models.rb#873
class Informers::DistilBertForQuestionAnswering < ::Informers::DistilBertPreTrainedModel
  # source://informers//lib/informers/models.rb#874
  def call(model_inputs); end
end

# source://informers//lib/informers/models.rb#867
class Informers::DistilBertForSequenceClassification < ::Informers::DistilBertPreTrainedModel
  # source://informers//lib/informers/models.rb#868
  def call(model_inputs); end
end

# source://informers//lib/informers/models.rb#864
class Informers::DistilBertModel < ::Informers::DistilBertPreTrainedModel; end

# source://informers//lib/informers/models.rb#861
class Informers::DistilBertPreTrainedModel < ::Informers::PreTrainedModel; end

# source://informers//lib/informers/tokenizers.rb#156
class Informers::DistilBertTokenizer < ::Informers::PreTrainedTokenizer; end

# source://informers//lib/informers/pipelines.rb#760
class Informers::DocumentQuestionAnsweringPipeline < ::Informers::Pipeline
  # source://informers//lib/informers/pipelines.rb#761
  def call(image, question, **generate_kwargs); end
end

# source://informers//lib/informers/processors.rb#393
class Informers::DonutFeatureExtractor < ::Informers::ImageFeatureExtractor
  # source://informers//lib/informers/processors.rb#394
  def pad_image(pixel_data, img_dims, pad_size, **options); end
end

# source://informers//lib/informers/models.rb#1164
class Informers::DonutSwinModel < ::Informers::DonutSwinPreTrainedModel; end

# source://informers//lib/informers/models.rb#1161
class Informers::DonutSwinPreTrainedModel < ::Informers::PreTrainedModel; end

# TODO add ElectraForPreTraining
#
# source://informers//lib/informers/models.rb#852
class Informers::ElectraModel < ::Informers::ElectraPreTrainedModel; end

# source://informers//lib/informers/models.rb#848
class Informers::ElectraPreTrainedModel < ::Informers::PreTrainedModel; end

# source://informers//lib/informers/pipelines.rb#1042
class Informers::EmbeddingPipeline < ::Informers::FeatureExtractionPipeline
  # source://informers//lib/informers/pipelines.rb#1043
  def call(texts, pooling: T.unsafe(nil), normalize: T.unsafe(nil), model_output: T.unsafe(nil)); end
end

# source://informers//lib/informers.rb#34
class Informers::Error < ::StandardError; end

# source://informers//lib/informers/pipelines.rb#821
class Informers::FeatureExtractionPipeline < ::Informers::Pipeline
  # source://informers//lib/informers/pipelines.rb#822
  def call(texts, pooling: T.unsafe(nil), normalize: T.unsafe(nil), quantize: T.unsafe(nil), precision: T.unsafe(nil), model_output: T.unsafe(nil)); end
end

# source://informers//lib/informers/processors.rb#2
class Informers::FeatureExtractor
  # @return [FeatureExtractor] a new instance of FeatureExtractor
  #
  # source://informers//lib/informers/processors.rb#5
  def initialize(config); end

  # Returns the value of attribute config.
  #
  # source://informers//lib/informers/processors.rb#3
  def config; end
end

# source://informers//lib/informers/pipelines.rb#280
class Informers::FillMaskPipeline < ::Informers::Pipeline
  # source://informers//lib/informers/pipelines.rb#281
  def call(texts, top_k: T.unsafe(nil)); end
end

# source://informers//lib/informers/models.rb#1066
class Informers::GPT2LMHeadModel < ::Informers::GPT2PreTrainedModel; end

# source://informers//lib/informers/models.rb#1063
class Informers::GPT2Model < ::Informers::GPT2PreTrainedModel; end

# source://informers//lib/informers/models.rb#1047
class Informers::GPT2PreTrainedModel < ::Informers::PreTrainedModel
  # @return [GPT2PreTrainedModel] a new instance of GPT2PreTrainedModel
  #
  # source://informers//lib/informers/models.rb#1050
  def initialize(config, session, generation_config); end

  # Returns the value of attribute dim_kv.
  #
  # source://informers//lib/informers/models.rb#1048
  def dim_kv; end

  # Returns the value of attribute num_heads.
  #
  # source://informers//lib/informers/models.rb#1048
  def num_heads; end

  # Returns the value of attribute num_layers.
  #
  # source://informers//lib/informers/models.rb#1048
  def num_layers; end
end

# source://informers//lib/informers/tokenizers.rb#162
class Informers::GPT2Tokenizer < ::Informers::PreTrainedTokenizer; end

# source://informers//lib/informers/pipelines.rb#520
class Informers::ImageClassificationPipeline < ::Informers::Pipeline
  # source://informers//lib/informers/pipelines.rb#521
  def call(images, top_k: T.unsafe(nil)); end
end

# source://informers//lib/informers/pipelines.rb#884
class Informers::ImageFeatureExtractionPipeline < ::Informers::Pipeline
  # source://informers//lib/informers/pipelines.rb#885
  def call(images); end
end

# source://informers//lib/informers/processors.rb#11
class Informers::ImageFeatureExtractor < ::Informers::FeatureExtractor
  # @return [ImageFeatureExtractor] a new instance of ImageFeatureExtractor
  #
  # source://informers//lib/informers/processors.rb#12
  def initialize(config); end

  # source://informers//lib/informers/processors.rb#332
  def call(images, *args); end

  # source://informers//lib/informers/processors.rb#153
  def get_resize_output_image_size(image, size); end

  # source://informers//lib/informers/processors.rb#67
  def pad_image(pixel_data, img_dims, pad_size, mode: T.unsafe(nil), center: T.unsafe(nil), constant_values: T.unsafe(nil)); end

  # source://informers//lib/informers/processors.rb#219
  def preprocess(image, do_normalize: T.unsafe(nil), do_pad: T.unsafe(nil), do_convert_rgb: T.unsafe(nil), do_convert_grayscale: T.unsafe(nil), do_flip_channel_order: T.unsafe(nil)); end

  # source://informers//lib/informers/processors.rb#147
  def rescale(pixel_data); end

  # source://informers//lib/informers/processors.rb#214
  def resize(image); end

  # source://informers//lib/informers/processors.rb#45
  def thumbnail(image, size, resample = T.unsafe(nil)); end
end

# source://informers//lib/informers/pipelines.rb#551
class Informers::ImageSegmentationPipeline < ::Informers::Pipeline
  # @return [ImageSegmentationPipeline] a new instance of ImageSegmentationPipeline
  #
  # source://informers//lib/informers/pipelines.rb#552
  def initialize(**options); end

  # source://informers//lib/informers/pipelines.rb#562
  def call(images, threshold: T.unsafe(nil), mask_threshold: T.unsafe(nil), overlap_mask_area_threshold: T.unsafe(nil), label_ids_to_fuse: T.unsafe(nil), target_sizes: T.unsafe(nil), subtask: T.unsafe(nil)); end
end

# source://informers//lib/informers/pipelines.rb#990
class Informers::ImageToImagePipeline < ::Informers::Pipeline
  # source://informers//lib/informers/pipelines.rb#991
  def call(images); end
end

# source://informers//lib/informers/pipelines.rb#499
class Informers::ImageToTextPipeline < ::Informers::Pipeline
  # source://informers//lib/informers/pipelines.rb#500
  def call(images, **generate_kwargs); end
end

# source://informers//lib/informers/models.rb#965
class Informers::M2M100ForConditionalGeneration < ::Informers::M2M100PreTrainedModel
  # @return [M2M100ForConditionalGeneration] a new instance of M2M100ForConditionalGeneration
  #
  # source://informers//lib/informers/models.rb#966
  def initialize(config, session, decoder_merged_session, generation_config); end
end

# source://informers//lib/informers/models.rb#962
class Informers::M2M100Model < ::Informers::M2M100PreTrainedModel; end

# source://informers//lib/informers/models.rb#959
class Informers::M2M100PreTrainedModel < ::Informers::PreTrainedModel; end

# source://informers//lib/informers/tokenizers.rb#197
class Informers::M2M100Tokenizer < ::Informers::PreTrainedTokenizer
  # @return [M2M100Tokenizer] a new instance of M2M100Tokenizer
  #
  # source://informers//lib/informers/tokenizers.rb#200
  def initialize(tokenizer_json, tokenizer_config); end

  # source://informers//lib/informers/tokenizers.rb#210
  def _build_translation_inputs(raw_inputs, tokenizer_options, generate_kwargs); end

  # Returns the value of attribute lang_to_token.
  #
  # source://informers//lib/informers/tokenizers.rb#198
  def lang_to_token; end

  # Returns the value of attribute language_codes.
  #
  # source://informers//lib/informers/tokenizers.rb#198
  def language_codes; end

  # Returns the value of attribute language_regex.
  #
  # source://informers//lib/informers/tokenizers.rb#198
  def language_regex; end
end

# source://informers//lib/informers/models.rb#941
class Informers::MBartForCausalLM < ::Informers::MBartPreTrainedModel
  # @return [MBartForCausalLM] a new instance of MBartForCausalLM
  #
  # source://informers//lib/informers/models.rb#945
  def initialize(config, decoder_merged_session, generation_config); end

  # Returns the value of attribute decoder_dim_kv.
  #
  # source://informers//lib/informers/models.rb#942
  def decoder_dim_kv; end

  # Returns the value of attribute encoder_dim_kv.
  #
  # source://informers//lib/informers/models.rb#942
  def encoder_dim_kv; end

  # Returns the value of attribute num_decoder_heads.
  #
  # source://informers//lib/informers/models.rb#942
  def num_decoder_heads; end

  # Returns the value of attribute num_decoder_layers.
  #
  # source://informers//lib/informers/models.rb#942
  def num_decoder_layers; end

  # Returns the value of attribute num_encoder_heads.
  #
  # source://informers//lib/informers/models.rb#942
  def num_encoder_heads; end

  # Returns the value of attribute num_encoder_layers.
  #
  # source://informers//lib/informers/models.rb#942
  def num_encoder_layers; end
end

# source://informers//lib/informers/models.rb#938
class Informers::MBartModel < ::Informers::MBartPreTrainedModel; end

# source://informers//lib/informers/models.rb#935
class Informers::MBartPreTrainedModel < ::Informers::PreTrainedModel; end

# source://informers//lib/informers/models.rb#14
Informers::MODEL_CLASS_TO_NAME_MAPPING = T.let(T.unsafe(nil), Hash)

# source://informers//lib/informers/models.rb#1354
Informers::MODEL_CLASS_TYPE_MAPPING = T.let(T.unsafe(nil), Array)

# source://informers//lib/informers/models.rb#1330
Informers::MODEL_FOR_AUDIO_CLASSIFICATION_MAPPING_NAMES = T.let(T.unsafe(nil), Hash)

# source://informers//lib/informers/models.rb#1337
Informers::MODEL_FOR_AUDIO_FRAME_CLASSIFICATION_MAPPING_NAMES = T.let(T.unsafe(nil), Hash)

# source://informers//lib/informers/models.rb#1334
Informers::MODEL_FOR_AUDIO_XVECTOR_MAPPING_NAMES = T.let(T.unsafe(nil), Hash)

# source://informers//lib/informers/models.rb#1327
Informers::MODEL_FOR_CTC_MAPPING_NAMES = T.let(T.unsafe(nil), Hash)

# source://informers//lib/informers/models.rb#1347
Informers::MODEL_FOR_DEPTH_ESTIMATION_MAPPING_NAMES = T.let(T.unsafe(nil), Hash)

# source://informers//lib/informers/models.rb#1301
Informers::MODEL_FOR_DOCUMENT_QUESTION_ANSWERING_MAPPING_NAMES = T.let(T.unsafe(nil), Hash)

# source://informers//lib/informers/models.rb#1305
Informers::MODEL_FOR_IMAGE_CLASSIFICATION_MAPPING_NAMES = T.let(T.unsafe(nil), Hash)

# source://informers//lib/informers/models.rb#1351
Informers::MODEL_FOR_IMAGE_FEATURE_EXTRACTION_MAPPING_NAMES = T.let(T.unsafe(nil), Hash)

# source://informers//lib/informers/models.rb#1340
Informers::MODEL_FOR_IMAGE_MATTING_MAPPING_NAMES = T.let(T.unsafe(nil), Hash)

# source://informers//lib/informers/models.rb#1317
Informers::MODEL_FOR_IMAGE_SEGMENTATION_MAPPING_NAMES = T.let(T.unsafe(nil), Hash)

# source://informers//lib/informers/models.rb#1343
Informers::MODEL_FOR_IMAGE_TO_IMAGE_MAPPING_NAMES = T.let(T.unsafe(nil), Hash)

# source://informers//lib/informers/models.rb#1287
Informers::MODEL_FOR_MASKED_LM_MAPPING_NAMES = T.let(T.unsafe(nil), Hash)

# source://informers//lib/informers/models.rb#1324
Informers::MODEL_FOR_MASK_GENERATION_MAPPING_NAMES = T.let(T.unsafe(nil), Hash)

# source://informers//lib/informers/models.rb#1309
Informers::MODEL_FOR_OBJECT_DETECTION_MAPPING_NAMES = T.let(T.unsafe(nil), Hash)

# source://informers//lib/informers/models.rb#1293
Informers::MODEL_FOR_QUESTION_ANSWERING_MAPPING_NAMES = T.let(T.unsafe(nil), Hash)

# source://informers//lib/informers/models.rb#1321
Informers::MODEL_FOR_SEMANTIC_SEGMENTATION_MAPPING_NAMES = T.let(T.unsafe(nil), Hash)

# source://informers//lib/informers/models.rb#1261
Informers::MODEL_FOR_SEQUENCE_CLASSIFICATION_MAPPING_NAMES = T.let(T.unsafe(nil), Hash)

# source://informers//lib/informers/models.rb#1276
Informers::MODEL_FOR_SEQ_TO_SEQ_CAUSAL_LM_MAPPING_NAMES = T.let(T.unsafe(nil), Hash)

# source://informers//lib/informers/models.rb#1249
Informers::MODEL_FOR_SPEECH_SEQ_2_SEQ_MAPPING_NAMES = T.let(T.unsafe(nil), Hash)

# source://informers//lib/informers/models.rb#1253
Informers::MODEL_FOR_TEXT_TO_SPECTROGRAM_MAPPING_NAMES = T.let(T.unsafe(nil), Hash)

# source://informers//lib/informers/models.rb#1257
Informers::MODEL_FOR_TEXT_TO_WAVEFORM_MAPPING_NAMES = T.let(T.unsafe(nil), Hash)

# source://informers//lib/informers/models.rb#1270
Informers::MODEL_FOR_TOKEN_CLASSIFICATION_MAPPING_NAMES = T.let(T.unsafe(nil), Hash)

# source://informers//lib/informers/models.rb#1297
Informers::MODEL_FOR_VISION_2_SEQ_MAPPING_NAMES = T.let(T.unsafe(nil), Hash)

# source://informers//lib/informers/models.rb#1313
Informers::MODEL_FOR_ZERO_SHOT_OBJECT_DETECTION_MAPPING_NAMES = T.let(T.unsafe(nil), Hash)

# source://informers//lib/informers/models.rb#1246
Informers::MODEL_MAPPING_NAMES_DECODER_ONLY = T.let(T.unsafe(nil), Hash)

# source://informers//lib/informers/models.rb#1242
Informers::MODEL_MAPPING_NAMES_ENCODER_DECODER = T.let(T.unsafe(nil), Hash)

# source://informers//lib/informers/models.rb#1223
Informers::MODEL_MAPPING_NAMES_ENCODER_ONLY = T.let(T.unsafe(nil), Hash)

# source://informers//lib/informers/models.rb#13
Informers::MODEL_NAME_TO_CLASS_MAPPING = T.let(T.unsafe(nil), Hash)

# source://informers//lib/informers/models.rb#2
Informers::MODEL_TYPES = T.let(T.unsafe(nil), Hash)

# NOTE: These will be populated fully later
#
# source://informers//lib/informers/models.rb#12
Informers::MODEL_TYPE_MAPPING = T.let(T.unsafe(nil), Hash)

# source://informers//lib/informers/models.rb#1282
Informers::MODEL_WITH_LM_HEAD_MAPPING_NAMES = T.let(T.unsafe(nil), Hash)

# source://informers//lib/informers/models.rb#882
class Informers::MPNetModel < ::Informers::MPNetPreTrainedModel; end

# source://informers//lib/informers/models.rb#879
class Informers::MPNetPreTrainedModel < ::Informers::PreTrainedModel; end

# source://informers//lib/informers/tokenizers.rb#175
class Informers::MPNetTokenizer < ::Informers::PreTrainedTokenizer; end

# source://informers//lib/informers/models.rb#1532
class Informers::MaskedLMOutput < ::Informers::ModelOutput
  # @return [MaskedLMOutput] a new instance of MaskedLMOutput
  #
  # source://informers//lib/informers/models.rb#1535
  def initialize(logits); end

  # Returns the value of attribute logits.
  #
  # source://informers//lib/informers/models.rb#1533
  def logits; end
end

# TODO remove in 2.0
#
# source://informers//lib/informers/model.rb#3
class Informers::Model
  # @return [Model] a new instance of Model
  #
  # source://informers//lib/informers/model.rb#4
  def initialize(model_id, quantized: T.unsafe(nil)); end

  # source://informers//lib/informers/model.rb#9
  def embed(texts); end
end

# source://informers//lib/informers/models.rb#1497
class Informers::ModelOutput
  # source://informers//lib/informers/models.rb#1498
  def [](key); end
end

# source://informers//lib/informers/models.rb#818
class Informers::ModernBertForMaskedLM < ::Informers::ModernBertPreTrainedModel
  # source://informers//lib/informers/models.rb#819
  def call(model_inputs); end
end

# source://informers//lib/informers/models.rb#824
class Informers::ModernBertForSequenceClassification < ::Informers::ModernBertPreTrainedModel
  # source://informers//lib/informers/models.rb#825
  def call(model_inputs); end
end

# source://informers//lib/informers/models.rb#830
class Informers::ModernBertForTokenClassification < ::Informers::ModernBertPreTrainedModel
  # source://informers//lib/informers/models.rb#831
  def call(model_inputs); end
end

# source://informers//lib/informers/models.rb#815
class Informers::ModernBertModel < ::Informers::ModernBertPreTrainedModel; end

# source://informers//lib/informers/models.rb#812
class Informers::ModernBertPreTrainedModel < ::Informers::PreTrainedModel; end

# source://informers//lib/informers/pipelines.rb#1352
Informers::NO_DEFAULT = T.let(T.unsafe(nil), Object)

# source://informers//lib/informers/tokenizers.rb#181
class Informers::NllbTokenizer < ::Informers::PreTrainedTokenizer
  # @return [NllbTokenizer] a new instance of NllbTokenizer
  #
  # source://informers//lib/informers/tokenizers.rb#184
  def initialize(tokenizer_json, tokenizer_config); end

  # source://informers//lib/informers/tokenizers.rb#192
  def _build_translation_inputs(raw_inputs, tokenizer_options, generate_kwargs); end

  # Returns the value of attribute lang_to_token.
  #
  # source://informers//lib/informers/tokenizers.rb#182
  def lang_to_token; end

  # Returns the value of attribute language_codes.
  #
  # source://informers//lib/informers/tokenizers.rb#182
  def language_codes; end

  # Returns the value of attribute language_regex.
  #
  # source://informers//lib/informers/tokenizers.rb#182
  def language_regex; end
end

# source://informers//lib/informers/models.rb#839
class Informers::NomicBertModel < ::Informers::NomicBertPreTrainedModel; end

# source://informers//lib/informers/models.rb#836
class Informers::NomicBertPreTrainedModel < ::Informers::PreTrainedModel; end

# source://informers//lib/informers/pipelines.rb#671
class Informers::ObjectDetectionPipeline < ::Informers::Pipeline
  # source://informers//lib/informers/pipelines.rb#672
  def call(images, threshold: T.unsafe(nil), percentage: T.unsafe(nil)); end
end

# source://informers//lib/informers/processors.rb#363
class Informers::OwlViTFeatureExtractor < ::Informers::ImageFeatureExtractor
  # source://informers//lib/informers/processors.rb#364
  def post_process_object_detection(*args); end
end

# source://informers//lib/informers/models.rb#1075
class Informers::OwlViTForObjectDetection < ::Informers::OwlViTPreTrainedModel; end

# source://informers//lib/informers/models.rb#1072
class Informers::OwlViTModel < ::Informers::OwlViTPreTrainedModel; end

# source://informers//lib/informers/models.rb#1069
class Informers::OwlViTPreTrainedModel < ::Informers::PreTrainedModel; end

# source://informers//lib/informers/pipelines.rb#2
class Informers::Pipeline
  # @return [Pipeline] a new instance of Pipeline
  #
  # source://informers//lib/informers/pipelines.rb#3
  def initialize(task:, model:, tokenizer: T.unsafe(nil), processor: T.unsafe(nil)); end

  private

  # source://informers//lib/informers/pipelines.rb#36
  def get_bounding_box(box, as_integer); end

  # source://informers//lib/informers/pipelines.rb#22
  def prepare_audios(audios, sampling_rate); end

  # source://informers//lib/informers/pipelines.rb#13
  def prepare_images(images); end
end

# source://informers//lib/informers/models.rb#69
class Informers::PreTrainedModel
  # @return [PreTrainedModel] a new instance of PreTrainedModel
  #
  # source://informers//lib/informers/models.rb#74
  def initialize(config, session); end

  # source://informers//lib/informers/models.rb#210
  def call(model_inputs, **kwargs); end

  # Returns the value of attribute config.
  #
  # source://informers//lib/informers/models.rb#72
  def config; end

  # source://informers//lib/informers/models.rb#214
  def generate(inputs, generation_config = T.unsafe(nil), logits_processor = T.unsafe(nil), inputs_attention_mask: T.unsafe(nil)); end

  private

  # source://informers//lib/informers/models.rb#509
  def add_past_key_values(decoder_feeds, past_key_values); end

  # source://informers//lib/informers/models.rb#665
  def decoder_forward(model_inputs); end

  # source://informers//lib/informers/models.rb#730
  def decoder_run_beam(beam); end

  # source://informers//lib/informers/models.rb#691
  def decoder_start_beams(input_token_ids, generation_config, num_output_tokens, inputs_attention_mask); end

  # source://informers//lib/informers/models.rb#749
  def decoder_update_beam(beam, new_token_id); end

  # source://informers//lib/informers/models.rb#653
  def encoder_forward(model_inputs, output_names: T.unsafe(nil)); end

  # source://informers//lib/informers/models.rb#493
  def get_attentions(decoder_results); end

  # source://informers//lib/informers/models.rb#410
  def get_generation_config(generation_config); end

  # source://informers//lib/informers/models.rb#353
  def get_logits_processor(generation_config, input_ids_seq_length, logits_processor = T.unsafe(nil)); end

  # source://informers//lib/informers/models.rb#473
  def get_past_key_values(decoder_results, past_key_values); end

  # source://informers//lib/informers/models.rb#775
  def get_start_beams(input_token_ids, generation_config, num_output_tokens, inputs_attention_mask); end

  # source://informers//lib/informers/models.rb#640
  def group_beams(beams); end

  # source://informers//lib/informers/models.rb#587
  def prepare_attention_mask(tokens); end

  # @raise [Todo]
  #
  # source://informers//lib/informers/models.rb#465
  def prepare_position_ids(session, feeds, use_cache_branch); end

  # TODO
  #
  # source://informers//lib/informers/models.rb#766
  def replace_tensors(obj); end

  # source://informers//lib/informers/models.rb#779
  def run_beam(beam); end

  # source://informers//lib/informers/models.rb#429
  def seq2seq_forward(model_inputs); end

  # source://informers//lib/informers/models.rb#605
  def seq2seq_run_beam(beam); end

  # source://informers//lib/informers/models.rb#541
  def seq2seq_start_beams(input_token_ids, generation_config, num_output_tokens, inputs_attention_mask = T.unsafe(nil)); end

  # source://informers//lib/informers/models.rb#636
  def seq2seq_update_beam(beam, new_token_id); end

  # source://informers//lib/informers/models.rb#754
  def session_run(session, inputs, output_names: T.unsafe(nil)); end

  # source://informers//lib/informers/models.rb#783
  def update_beam(beam, new_token_id); end

  # TODO
  #
  # source://informers//lib/informers/models.rb#771
  def validate_inputs(session, inputs); end

  class << self
    # source://informers//lib/informers/models.rb#178
    def construct_session(pretrained_model_name_or_path, file_name, **options); end

    # source://informers//lib/informers/models.rb#110
    def from_pretrained(pretrained_model_name_or_path, quantized: T.unsafe(nil), progress_callback: T.unsafe(nil), config: T.unsafe(nil), cache_dir: T.unsafe(nil), local_files_only: T.unsafe(nil), revision: T.unsafe(nil), device: T.unsafe(nil), dtype: T.unsafe(nil), model_file_name: T.unsafe(nil), session_options: T.unsafe(nil)); end
  end
end

# source://informers//lib/informers/models.rb#70
Informers::PreTrainedModel::MAIN_INPUT_NAME = T.let(T.unsafe(nil), Symbol)

# source://informers//lib/informers/tokenizers.rb#2
class Informers::PreTrainedTokenizer
  # @return [PreTrainedTokenizer] a new instance of PreTrainedTokenizer
  #
  # source://informers//lib/informers/tokenizers.rb#5
  def initialize(tokenizer_json, tokenizer_config); end

  # source://informers//lib/informers/tokenizers.rb#137
  def batch_decode(batch, **decode_args); end

  # source://informers//lib/informers/tokenizers.rb#65
  def call(text, text_pair: T.unsafe(nil), add_special_tokens: T.unsafe(nil), padding: T.unsafe(nil), truncation: T.unsafe(nil), max_length: T.unsafe(nil), return_tensor: T.unsafe(nil), return_token_type_ids: T.unsafe(nil), return_offsets: T.unsafe(nil)); end

  # source://informers//lib/informers/tokenizers.rb#129
  def convert_tokens_to_ids(tokens); end

  # source://informers//lib/informers/tokenizers.rb#125
  def convert_tokens_to_string(tokens); end

  # source://informers//lib/informers/tokenizers.rb#121
  def decode(tokens, skip_special_tokens:); end

  # source://informers//lib/informers/tokenizers.rb#44
  def get_token(*keys); end

  # source://informers//lib/informers/tokenizers.rb#133
  def id_to_token(id); end

  # Returns the value of attribute mask_token.
  #
  # source://informers//lib/informers/tokenizers.rb#3
  def mask_token; end

  # Returns the value of attribute mask_token_id.
  #
  # source://informers//lib/informers/tokenizers.rb#3
  def mask_token_id; end

  # source://informers//lib/informers/tokenizers.rb#141
  def padding_side=(side); end

  # Returns the value of attribute sep_token_id.
  #
  # source://informers//lib/informers/tokenizers.rb#3
  def sep_token_id; end
end

# source://informers//lib/informers/configs.rb#2
class Informers::PretrainedConfig
  # @return [PretrainedConfig] a new instance of PretrainedConfig
  #
  # source://informers//lib/informers/configs.rb#3
  def initialize(config_json); end

  # source://informers//lib/informers/configs.rb#7
  def [](key); end

  # source://informers//lib/informers/configs.rb#11
  def []=(key, value); end

  # source://informers//lib/informers/configs.rb#15
  def to_h; end

  class << self
    # source://informers//lib/informers/configs.rb#19
    def from_pretrained(pretrained_model_name_or_path, progress_callback: T.unsafe(nil), config: T.unsafe(nil), cache_dir: T.unsafe(nil), local_files_only: T.unsafe(nil), revision: T.unsafe(nil), **kwargs); end

    # source://informers//lib/informers/configs.rb#39
    def load_config(pretrained_model_name_or_path, **options); end
  end
end

# source://informers//lib/informers/models.rb#16
class Informers::PretrainedMixin
  class << self
    # source://informers//lib/informers/models.rb#17
    def from_pretrained(pretrained_model_name_or_path, quantized: T.unsafe(nil), progress_callback: T.unsafe(nil), config: T.unsafe(nil), cache_dir: T.unsafe(nil), local_files_only: T.unsafe(nil), revision: T.unsafe(nil), device: T.unsafe(nil), dtype: T.unsafe(nil), model_file_name: T.unsafe(nil), session_options: T.unsafe(nil)); end
  end
end

# source://informers//lib/informers/processors.rb#788
class Informers::Processor
  # @return [Processor] a new instance of Processor
  #
  # source://informers//lib/informers/processors.rb#791
  def initialize(feature_extractor); end

  # source://informers//lib/informers/processors.rb#795
  def call(input, *args); end

  # Returns the value of attribute feature_extractor.
  #
  # source://informers//lib/informers/processors.rb#789
  def feature_extractor; end
end

# source://informers//lib/informers/models.rb#1541
class Informers::QuestionAnsweringModelOutput < ::Informers::ModelOutput
  # @return [QuestionAnsweringModelOutput] a new instance of QuestionAnsweringModelOutput
  #
  # source://informers//lib/informers/models.rb#1544
  def initialize(start_logits, end_logits); end

  # Returns the value of attribute end_logits.
  #
  # source://informers//lib/informers/models.rb#1542
  def end_logits; end

  # Returns the value of attribute start_logits.
  #
  # source://informers//lib/informers/models.rb#1542
  def start_logits; end
end

# source://informers//lib/informers/pipelines.rb#228
class Informers::QuestionAnsweringPipeline < ::Informers::Pipeline
  # source://informers//lib/informers/pipelines.rb#229
  def call(question, context, top_k: T.unsafe(nil)); end
end

# source://informers//lib/informers/pipelines.rb#1053
class Informers::RerankingPipeline < ::Informers::Pipeline
  # source://informers//lib/informers/pipelines.rb#1054
  def call(query, documents, return_documents: T.unsafe(nil), top_k: T.unsafe(nil)); end
end

# source://informers//lib/informers/models.rb#999
class Informers::RobertaForMaskedLM < ::Informers::RobertaPreTrainedModel
  # source://informers//lib/informers/models.rb#1000
  def call(model_inputs); end
end

# source://informers//lib/informers/models.rb#1011
class Informers::RobertaForSequenceClassification < ::Informers::RobertaPreTrainedModel
  # source://informers//lib/informers/models.rb#1012
  def call(model_inputs); end
end

# source://informers//lib/informers/models.rb#1005
class Informers::RobertaForTokenClassification < ::Informers::RobertaPreTrainedModel
  # source://informers//lib/informers/models.rb#1006
  def call(model_inputs); end
end

# source://informers//lib/informers/models.rb#996
class Informers::RobertaModel < ::Informers::RobertaPreTrainedModel; end

# source://informers//lib/informers/models.rb#993
class Informers::RobertaPreTrainedModel < ::Informers::PreTrainedModel; end

# source://informers//lib/informers/tokenizers.rb#169
class Informers::RobertaTokenizer < ::Informers::PreTrainedTokenizer; end

# source://informers//lib/informers/pipelines.rb#1083
Informers::SUPPORTED_TASKS = T.let(T.unsafe(nil), Hash)

# source://informers//lib/informers/models.rb#1503
class Informers::Seq2SeqLMOutput < ::Informers::ModelOutput
  # @return [Seq2SeqLMOutput] a new instance of Seq2SeqLMOutput
  #
  # source://informers//lib/informers/models.rb#1504
  def initialize(logits, past_key_values, encoder_outputs, decoder_attentions = T.unsafe(nil), cross_attentions = T.unsafe(nil)); end
end

# source://informers//lib/informers/models.rb#1514
class Informers::SequenceClassifierOutput < ::Informers::ModelOutput
  # @return [SequenceClassifierOutput] a new instance of SequenceClassifierOutput
  #
  # source://informers//lib/informers/models.rb#1517
  def initialize(logits); end

  # Returns the value of attribute logits.
  #
  # source://informers//lib/informers/models.rb#1515
  def logits; end
end

# source://informers//lib/informers/models.rb#1211
class Informers::SpeechT5ForSpeechToText < ::Informers::SpeechT5PreTrainedModel; end

# source://informers//lib/informers/models.rb#1214
class Informers::SpeechT5ForTextToSpeech < ::Informers::SpeechT5PreTrainedModel; end

# source://informers//lib/informers/models.rb#1208
class Informers::SpeechT5Model < ::Informers::SpeechT5PreTrainedModel; end

# source://informers//lib/informers/models.rb#1205
class Informers::SpeechT5PreTrainedModel < ::Informers::PreTrainedModel; end

# source://informers//lib/informers/tokenizers.rb#247
class Informers::SpeechT5Tokenizer < ::Informers::PreTrainedTokenizer; end

# source://informers//lib/informers/pipelines.rb#356
class Informers::SummarizationPipeline < ::Informers::Text2TextGenerationPipeline; end

# source://informers//lib/informers/pipelines.rb#357
Informers::SummarizationPipeline::KEY = T.let(T.unsafe(nil), Symbol)

# source://informers//lib/informers/models.rb#1102
class Informers::Swin2SRForImageSuperResolution < ::Informers::Swin2SRPreTrainedModel; end

# source://informers//lib/informers/processors.rb#369
class Informers::Swin2SRImageProcessor < ::Informers::ImageFeatureExtractor
  # source://informers//lib/informers/processors.rb#370
  def pad_image(pixel_data, img_dims, pad_size, **options); end
end

# source://informers//lib/informers/models.rb#1099
class Informers::Swin2SRModel < ::Informers::Swin2SRPreTrainedModel; end

# source://informers//lib/informers/models.rb#1096
class Informers::Swin2SRPreTrainedModel < ::Informers::PreTrainedModel; end

# source://informers//lib/informers/models.rb#891
class Informers::T5ForConditionalGeneration < ::Informers::T5PreTrainedModel
  # @return [T5ForConditionalGeneration] a new instance of T5ForConditionalGeneration
  #
  # source://informers//lib/informers/models.rb#892
  def initialize(config, session, decoder_merged_session, generation_config); end
end

# source://informers//lib/informers/models.rb#888
class Informers::T5Model < ::Informers::T5PreTrainedModel; end

# source://informers//lib/informers/models.rb#885
class Informers::T5PreTrainedModel < ::Informers::PreTrainedModel; end

# source://informers//lib/informers/tokenizers.rb#159
class Informers::T5Tokenizer < ::Informers::PreTrainedTokenizer; end

# source://informers//lib/informers/pipelines.rb#1329
Informers::TASK_ALIASES = T.let(T.unsafe(nil), Hash)

# source://informers//lib/informers/pipelines.rb#314
class Informers::Text2TextGenerationPipeline < ::Informers::Pipeline
  # source://informers//lib/informers/pipelines.rb#317
  def call(texts, **generate_kwargs); end
end

# source://informers//lib/informers/pipelines.rb#315
Informers::Text2TextGenerationPipeline::KEY = T.let(T.unsafe(nil), Symbol)

# source://informers//lib/informers/pipelines.rb#46
class Informers::TextClassificationPipeline < ::Informers::Pipeline
  # source://informers//lib/informers/pipelines.rb#47
  def call(texts, top_k: T.unsafe(nil)); end
end

# source://informers//lib/informers/pipelines.rb#364
class Informers::TextGenerationPipeline < ::Informers::Pipeline
  # source://informers//lib/informers/pipelines.rb#365
  def call(texts, **generate_kwargs); end
end

# source://informers//lib/informers/pipelines.rb#801
class Informers::TextToAudioPipeline < ::Informers::Pipeline
  # @return [TextToAudioPipeline] a new instance of TextToAudioPipeline
  #
  # source://informers//lib/informers/pipelines.rb#804
  def initialize(**options); end

  # source://informers//lib/informers/pipelines.rb#811
  def call(text_inputs, speaker_embeddings: T.unsafe(nil)); end
end

# source://informers//lib/informers/pipelines.rb#802
Informers::TextToAudioPipeline::DEFAULT_VOCODER_ID = T.let(T.unsafe(nil), String)

# source://informers//lib/informers.rb#36
class Informers::Todo < ::Informers::Error
  # source://informers//lib/informers.rb#37
  def message; end
end

# source://informers//lib/informers/pipelines.rb#88
class Informers::TokenClassificationPipeline < ::Informers::Pipeline
  # source://informers//lib/informers/pipelines.rb#89
  def call(texts, ignore_labels: T.unsafe(nil), aggregation_strategy: T.unsafe(nil)); end

  # source://informers//lib/informers/pipelines.rb#176
  def get_tag(entity_name); end

  # source://informers//lib/informers/pipelines.rb#192
  def group_entities(entities); end

  # source://informers//lib/informers/pipelines.rb#160
  def group_sub_entities(entities); end
end

# source://informers//lib/informers/models.rb#1523
class Informers::TokenClassifierOutput < ::Informers::ModelOutput
  # @return [TokenClassifierOutput] a new instance of TokenClassifierOutput
  #
  # source://informers//lib/informers/models.rb#1526
  def initialize(logits); end

  # Returns the value of attribute logits.
  #
  # source://informers//lib/informers/models.rb#1524
  def logits; end
end

# source://informers//lib/informers/pipelines.rb#360
class Informers::TranslationPipeline < ::Informers::Text2TextGenerationPipeline; end

# source://informers//lib/informers/pipelines.rb#361
Informers::TranslationPipeline::KEY = T.let(T.unsafe(nil), Symbol)

# source://informers//lib/informers/utils/audio.rb#2
module Informers::Utils
  class << self
    # source://informers//lib/informers/tokenizers.rb#216
    def _build_translation_inputs(slf, raw_inputs, tokenizer_options, generate_kwargs); end

    # source://informers//lib/informers/utils/core.rb#7
    def calculate_reflect_offset(i, w); end

    # source://informers//lib/informers/processors.rb#658
    def center_to_corners_format(v); end

    # source://informers//lib/informers/utils/tensor.rb#37
    def dims(tensor); end

    # source://informers//lib/informers/utils/core.rb#3
    def dispatch_callback(progress_callback, data); end

    # from the Transformers Python library
    #
    # source://informers//lib/informers/utils/ffmpeg.rb#18
    def ffmpeg_read(data, sampling_rate); end

    # source://informers//lib/informers/utils/math.rb#96
    def get_top_items(items, top_k = T.unsafe(nil)); end

    # source://informers//lib/informers/utils/tensor.rb#46
    def interpolate(input, shape, mode = T.unsafe(nil), align_corners = T.unsafe(nil)); end

    # source://informers//lib/informers/utils/math.rb#3
    def interpolate_data(input, in_shape, out_shape, mode = T.unsafe(nil), align_corners = T.unsafe(nil)); end

    # source://informers//lib/informers/utils/math.rb#110
    def max(arr); end

    # source://informers//lib/informers/utils/tensor.rb#3
    def mean_pooling(last_hidden_state, attention_mask); end

    # source://informers//lib/informers/utils/tensor.rb#19
    def normalize(result); end

    # source://informers//lib/informers/utils/tensor.rb#30
    def ones_like(tensor); end

    # source://informers//lib/informers/processors.rb#668
    def post_process_object_detection(outputs, threshold = T.unsafe(nil), target_sizes = T.unsafe(nil), is_zero_shot = T.unsafe(nil)); end

    # source://informers//lib/informers/utils/audio.rb#3
    def read_audio(input, sampling_rate); end

    # source://informers//lib/informers/utils/tensor.rb#64
    def reshape(arr, dims); end

    # source://informers//lib/informers/utils/math.rb#89
    def sigmoid(arr); end

    # source://informers//lib/informers/utils/math.rb#73
    def softmax(arr); end

    # source://informers//lib/informers/utils/tensor.rb#26
    def stack(tensors, dim = T.unsafe(nil)); end
  end
end

# source://informers//lib/informers/utils/generation.rb#133
class Informers::Utils::BeamSearchSampler < ::Informers::Utils::Sampler
  # source://informers//lib/informers/utils/generation.rb#134
  def sample(logits, index = T.unsafe(nil)); end
end

# source://informers//lib/informers/utils/dtypes.rb#3
Informers::Utils::DEFAULT_DTYPE_SUFFIX_MAPPING = T.let(T.unsafe(nil), Hash)

# source://informers//lib/informers/utils/generation.rb#268
class Informers::Utils::ForcedBOSTokenLogitsProcessor < ::Informers::Utils::LogitsProcessor
  # @return [ForcedBOSTokenLogitsProcessor] a new instance of ForcedBOSTokenLogitsProcessor
  #
  # source://informers//lib/informers/utils/generation.rb#269
  def initialize(bos_token_id); end

  # source://informers//lib/informers/utils/generation.rb#274
  def call(input_ids, logits); end
end

# source://informers//lib/informers/utils/generation.rb#283
class Informers::Utils::ForcedEOSTokenLogitsProcessor < ::Informers::Utils::LogitsProcessor
  # @return [ForcedEOSTokenLogitsProcessor] a new instance of ForcedEOSTokenLogitsProcessor
  #
  # source://informers//lib/informers/utils/generation.rb#284
  def initialize(max_length, forced_eos_token_id); end

  # source://informers//lib/informers/utils/generation.rb#290
  def call(input_ids, logits); end
end

# source://informers//lib/informers/utils/generation.rb#3
class Informers::Utils::GenerationConfig
  # @return [GenerationConfig] a new instance of GenerationConfig
  #
  # source://informers//lib/informers/utils/generation.rb#4
  def initialize(kwargs); end

  # source://informers//lib/informers/utils/generation.rb#66
  def [](key); end

  # source://informers//lib/informers/utils/generation.rb#70
  def merge!(config); end
end

# source://informers//lib/informers/utils/generation.rb#119
class Informers::Utils::GreedySampler < ::Informers::Utils::Sampler
  # source://informers//lib/informers/utils/generation.rb#120
  def sample(logits, index = T.unsafe(nil)); end
end

# source://informers//lib/informers/utils/hub.rb#3
module Informers::Utils::Hub
  class << self
    # source://informers//lib/informers/utils/hub.rb#235
    def display_progress(filename, width, size, expected_size); end

    # source://informers//lib/informers/utils/hub.rb#38
    def get_file(url_or_path, progress_callback = T.unsafe(nil), progress_info = T.unsafe(nil)); end

    # source://informers//lib/informers/utils/hub.rb#118
    def get_model_file(path_or_repo_id, filename, fatal = T.unsafe(nil), **options); end

    # source://informers//lib/informers/utils/hub.rb#212
    def get_model_json(model_path, file_name, fatal = T.unsafe(nil), **options); end

    # source://informers//lib/informers/utils/hub.rb#23
    def is_valid_url(string, protocols = T.unsafe(nil), valid_hosts = T.unsafe(nil)); end

    # source://informers//lib/informers/utils/hub.rb#222
    def path_join(*parts); end

    # source://informers//lib/informers/utils/hub.rb#106
    def try_cache(cache, *names); end
  end
end

# source://informers//lib/informers/utils/hub.rb#70
class Informers::Utils::Hub::FileCache
  # @return [FileCache] a new instance of FileCache
  #
  # source://informers//lib/informers/utils/hub.rb#73
  def initialize(path); end

  # source://informers//lib/informers/utils/hub.rb#77
  def match(request); end

  # Returns the value of attribute path.
  #
  # source://informers//lib/informers/utils/hub.rb#71
  def path; end

  # source://informers//lib/informers/utils/hub.rb#84
  def put(request, response); end

  # source://informers//lib/informers/utils/hub.rb#101
  def resolve_path(request); end
end

# source://informers//lib/informers/utils/hub.rb#4
class Informers::Utils::Hub::FileResponse
  # @return [FileResponse] a new instance of FileResponse
  #
  # source://informers//lib/informers/utils/hub.rb#7
  def initialize(file_path); end

  # Returns the value of attribute exists.
  #
  # source://informers//lib/informers/utils/hub.rb#5
  def exists; end

  # source://informers//lib/informers/utils/hub.rb#18
  def read; end

  # Returns the value of attribute status.
  #
  # source://informers//lib/informers/utils/hub.rb#5
  def status; end
end

# source://informers//lib/informers/utils/generation.rb#188
class Informers::Utils::LogitsProcessor; end

# source://informers//lib/informers/utils/generation.rb#158
class Informers::Utils::LogitsProcessorList
  # @return [LogitsProcessorList] a new instance of LogitsProcessorList
  #
  # source://informers//lib/informers/utils/generation.rb#159
  def initialize; end

  # source://informers//lib/informers/utils/generation.rb#172
  def call(input_ids, batched_logits); end

  # source://informers//lib/informers/utils/generation.rb#168
  def concat(items); end

  # source://informers//lib/informers/utils/generation.rb#164
  def push(item); end

  # source://informers//lib/informers/utils/generation.rb#183
  def to_ary; end
end

# source://informers//lib/informers/utils/generation.rb#250
class Informers::Utils::MinLengthLogitsProcessor < ::Informers::Utils::LogitsProcessor
  # @return [MinLengthLogitsProcessor] a new instance of MinLengthLogitsProcessor
  #
  # source://informers//lib/informers/utils/generation.rb#251
  def initialize(min_length, eos_token_id); end

  # source://informers//lib/informers/utils/generation.rb#257
  def call(input_ids, logits); end
end

# source://informers//lib/informers/utils/generation.rb#191
class Informers::Utils::NoRepeatNGramLogitsProcessor < ::Informers::Utils::LogitsProcessor
  # @return [NoRepeatNGramLogitsProcessor] a new instance of NoRepeatNGramLogitsProcessor
  #
  # source://informers//lib/informers/utils/generation.rb#192
  def initialize(no_repeat_ngram_size); end

  # source://informers//lib/informers/utils/generation.rb#228
  def calc_banned_ngram_tokens(prev_input_ids); end

  # source://informers//lib/informers/utils/generation.rb#240
  def call(input_ids, logits); end

  # source://informers//lib/informers/utils/generation.rb#222
  def get_generated_ngrams(banned_ngrams, prev_input_ids); end

  # source://informers//lib/informers/utils/generation.rb#197
  def get_ngrams(prev_input_ids); end
end

# source://informers//lib/informers/utils/image.rb#3
class Informers::Utils::RawImage
  # @return [RawImage] a new instance of RawImage
  #
  # source://informers//lib/informers/utils/image.rb#15
  def initialize(image); end

  # source://informers//lib/informers/utils/image.rb#47
  def center_crop(crop_width, crop_height); end

  # Returns the value of attribute channels.
  #
  # source://informers//lib/informers/utils/image.rb#13
  def channels; end

  # source://informers//lib/informers/utils/image.rb#22
  def data; end

  # Returns the value of attribute height.
  #
  # source://informers//lib/informers/utils/image.rb#13
  def height; end

  # Returns the value of attribute image.
  #
  # source://informers//lib/informers/utils/image.rb#13
  def image; end

  # source://informers//lib/informers/utils/image.rb#30
  def resize(width, height, resample: T.unsafe(nil)); end

  # @raise [Todo]
  #
  # source://informers//lib/informers/utils/image.rb#74
  def rgb; end

  # source://informers//lib/informers/utils/image.rb#82
  def save(path); end

  # source://informers//lib/informers/utils/image.rb#26
  def size; end

  # Returns the value of attribute width.
  #
  # source://informers//lib/informers/utils/image.rb#13
  def width; end

  class << self
    # source://informers//lib/informers/utils/image.rb#100
    def from_array(input); end

    # source://informers//lib/informers/utils/image.rb#86
    def read(input); end
  end
end

# source://informers//lib/informers/utils/image.rb#4
Informers::Utils::RawImage::RESAMPLING_MAPPING = T.let(T.unsafe(nil), Hash)

# source://informers//lib/informers/utils/generation.rb#75
class Informers::Utils::Sampler
  # @return [Sampler] a new instance of Sampler
  #
  # source://informers//lib/informers/utils/generation.rb#76
  def initialize(generation_config); end

  # source://informers//lib/informers/utils/generation.rb#81
  def call(logits, index = T.unsafe(nil)); end

  # source://informers//lib/informers/utils/generation.rb#87
  def get_logits(logits, index); end

  class << self
    # source://informers//lib/informers/utils/generation.rb#105
    def get_sampler(generation_config); end
  end
end

# source://informers//lib/informers/version.rb#2
Informers::VERSION = T.let(T.unsafe(nil), String)

# source://informers//lib/informers/processors.rb#360
class Informers::ViTFeatureExtractor < ::Informers::ImageFeatureExtractor; end

# source://informers//lib/informers/models.rb#1035
class Informers::ViTForImageClassification < ::Informers::ViTPreTrainedModel
  # source://informers//lib/informers/models.rb#1036
  def call(model_inputs); end
end

# source://informers//lib/informers/models.rb#1032
class Informers::ViTModel < ::Informers::ViTPreTrainedModel; end

# source://informers//lib/informers/models.rb#1029
class Informers::ViTPreTrainedModel < ::Informers::PreTrainedModel; end

# source://informers//lib/informers/models.rb#1114
class Informers::VisionEncoderDecoderModel < ::Informers::PreTrainedModel
  # @return [VisionEncoderDecoderModel] a new instance of VisionEncoderDecoderModel
  #
  # source://informers//lib/informers/models.rb#1117
  def initialize(config, session, decoder_merged_session, generation_config); end
end

# source://informers//lib/informers/models.rb#1115
Informers::VisionEncoderDecoderModel::MAIN_INPUT_NAME = T.let(T.unsafe(nil), Symbol)

# source://informers//lib/informers/models.rb#1199
class Informers::VitsModel < ::Informers::VitsPreTrainedModel
  # source://informers//lib/informers/models.rb#1200
  def call(model_inputs); end
end

# source://informers//lib/informers/models.rb#1196
class Informers::VitsPreTrainedModel < ::Informers::PreTrainedModel; end

# source://informers//lib/informers/processors.rb#749
class Informers::Wav2Vec2FeatureExtractor < ::Informers::FeatureExtractor
  # source://informers//lib/informers/processors.rb#750
  def _zero_mean_unit_var_norm(input_values); end

  # source://informers//lib/informers/processors.rb#757
  def call(audio); end
end

# source://informers//lib/informers/models.rb#987
class Informers::Wav2Vec2ForSequenceClassification < ::Informers::Wav2Vec2PreTrainedModel
  # source://informers//lib/informers/models.rb#988
  def call(model_inputs); end
end

# source://informers//lib/informers/models.rb#984
class Informers::Wav2Vec2Model < ::Informers::Wav2Vec2PreTrainedModel; end

# source://informers//lib/informers/models.rb#981
class Informers::Wav2Vec2PreTrainedModel < ::Informers::PreTrainedModel; end

# source://informers//lib/informers/processors.rb#733
class Informers::WhisperFeatureExtractor < ::Informers::FeatureExtractor
  # @raise [Todo]
  # @return [WhisperFeatureExtractor] a new instance of WhisperFeatureExtractor
  #
  # source://informers//lib/informers/processors.rb#734
  def initialize(config); end

  # @raise [Todo]
  #
  # source://informers//lib/informers/processors.rb#740
  def _extract_fbank_features(waveform); end

  # @raise [Todo]
  #
  # source://informers//lib/informers/processors.rb#744
  def call(audio); end
end

# source://informers//lib/informers/models.rb#1173
class Informers::WhisperForConditionalGeneration < ::Informers::WhisperPreTrainedModel
  # @return [WhisperForConditionalGeneration] a new instance of WhisperForConditionalGeneration
  #
  # source://informers//lib/informers/models.rb#1177
  def initialize(config, session, decoder_merged_session, generation_config); end

  # @raise [Todo]
  #
  # source://informers//lib/informers/models.rb#1191
  def generate(inputs, generation_config = T.unsafe(nil), logits_processor = T.unsafe(nil)); end
end

# source://informers//lib/informers/models.rb#1175
Informers::WhisperForConditionalGeneration::MAIN_INPUT_NAME = T.let(T.unsafe(nil), Symbol)

# source://informers//lib/informers/models.rb#1174
Informers::WhisperForConditionalGeneration::REQUIRES_ATTENTION_MASK = T.let(T.unsafe(nil), FalseClass)

# source://informers//lib/informers/models.rb#1170
class Informers::WhisperModel < ::Informers::WhisperPreTrainedModel; end

# source://informers//lib/informers/models.rb#1167
class Informers::WhisperPreTrainedModel < ::Informers::PreTrainedModel; end

# source://informers//lib/informers/models.rb#1023
class Informers::XLMRobertaForSequenceClassification < ::Informers::XLMRobertaPreTrainedModel
  # source://informers//lib/informers/models.rb#1024
  def call(model_inputs); end
end

# source://informers//lib/informers/models.rb#1020
class Informers::XLMRobertaModel < ::Informers::XLMRobertaPreTrainedModel; end

# source://informers//lib/informers/models.rb#1017
class Informers::XLMRobertaPreTrainedModel < ::Informers::PreTrainedModel; end

# source://informers//lib/informers/tokenizers.rb#172
class Informers::XLMRobertaTokenizer < ::Informers::PreTrainedTokenizer; end

# source://informers//lib/informers/pipelines.rb#930
class Informers::ZeroShotAudioClassificationPipeline < ::Informers::Pipeline
  # source://informers//lib/informers/pipelines.rb#931
  def call(audio, candidate_labels, hypothesis_template: T.unsafe(nil)); end
end

# source://informers//lib/informers/pipelines.rb#420
class Informers::ZeroShotClassificationPipeline < ::Informers::Pipeline
  # @return [ZeroShotClassificationPipeline] a new instance of ZeroShotClassificationPipeline
  #
  # source://informers//lib/informers/pipelines.rb#421
  def initialize(**options); end

  # source://informers//lib/informers/pipelines.rb#439
  def call(texts, candidate_labels, hypothesis_template: T.unsafe(nil), multi_label: T.unsafe(nil)); end
end

# source://informers//lib/informers/pipelines.rb#627
class Informers::ZeroShotImageClassificationPipeline < ::Informers::Pipeline
  # source://informers//lib/informers/pipelines.rb#628
  def call(images, candidate_labels, hypothesis_template: T.unsafe(nil)); end
end

# source://informers//lib/informers/pipelines.rb#706
class Informers::ZeroShotObjectDetectionPipeline < ::Informers::Pipeline
  # source://informers//lib/informers/pipelines.rb#707
  def call(images, candidate_labels, threshold: T.unsafe(nil), top_k: T.unsafe(nil), percentage: T.unsafe(nil)); end
end
